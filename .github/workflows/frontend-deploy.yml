name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'cliente/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'cliente/**'
  workflow_dispatch:

env:
  NODE_VERSION: 22
  AWS_REGION: us-east-2
  S3_BUCKET_NAME: cloudfront-files-socialgraph
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: main-aws
    defaults:
      run:
        working-directory: ./cliente
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # Modificamos la configuraci√≥n del cach√©
          cache: 'npm'
          cache-dependency-path: './cliente/package-lock.json'
          
      # A√±adimos un paso para verificar la estructura de archivos
      - name: Verify file structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Cliente directory content:"
          ls -la
          echo "Package files:"
          if [ -f "package.json" ]; then echo "package.json exists"; else echo "package.json missing!"; fi
          if [ -f "package-lock.json" ]; then echo "package-lock.json exists"; else echo "package-lock.json missing!"; fi
          
      - name: Install frontend dependencies
        run: npm ci
        
      - name: Lint frontend
        run: npm run lint --if-present
        
      - name: Test frontend
        run: npm run test --if-present
        
      - name: Build frontend
        run: npm run build
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to S3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          aws s3 sync build/ s3://${{ env.S3_BUCKET_NAME }} --delete
      
      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
      
      - name: Deployment summary
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "‚úÖ Frontend deployed successfully!"
          echo "üåê Website URL: https://${{ secrets.CLOUDFRONT_DOMAIN || format('{0}.cloudfront.net', env.CLOUDFRONT_DISTRIBUTION_ID) }}"